"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PingCommand = void 0;
const framework_1 = require("@sapphire/framework");
const discord_js_utilities_1 = require("@sapphire/discord.js-utilities");
class PingCommand extends framework_1.Command {
    registerApplicationCommands(registry) {
        registry.registerChatInputCommand((builder) => builder.setName('ping').setDescription('Ping bot to see if it is alive'));
    }
    async chatInputRun(interaction) {
        const msg = await interaction.reply({ content: `Pinging...`, ephemeral: true, fetchReply: true });
        if ((0, discord_js_utilities_1.isMessageInstance)(msg)) {
            const diff = msg.createdTimestamp - interaction.createdTimestamp;
            const ping = Math.round(this.container.client.ws.ping);
            return interaction.editReply(`Pong!\nBOT: ${ping}ms. \nWS: ${diff}ms.`);
        }
        return interaction.editReply('Something went wrong when trying to recieve the ping.');
    }
}
exports.PingCommand = PingCommand;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tYW5kcy9nZW5lcmFsL3BpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsbURBQWdFO0FBQ2hFLHlFQUFtRTtBQUVuRSxNQUFhLFdBQVksU0FBUSxtQkFBTztJQUNwQiwyQkFBMkIsQ0FBQyxRQUFtQztRQUMzRSxRQUFRLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUM1QyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLGNBQWMsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUN6RSxDQUFDO0lBQ0osQ0FBQztJQUVNLEtBQUssQ0FBQyxZQUFZLENBQUMsV0FBZ0Q7UUFDeEUsTUFBTSxHQUFHLEdBQUcsTUFBTSxXQUFXLENBQUMsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBRWxHLElBQUksSUFBQSx3Q0FBaUIsRUFBQyxHQUFHLENBQUMsRUFBRTtZQUMxQixNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsZ0JBQWdCLEdBQUcsV0FBVyxDQUFDLGdCQUFnQixDQUFDO1lBQ2pFLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3ZELE9BQU8sV0FBVyxDQUFDLFNBQVMsQ0FBQyxlQUFlLElBQUksYUFBYSxJQUFJLEtBQUssQ0FBQyxDQUFDO1NBQ3pFO1FBRUQsT0FBTyxXQUFXLENBQUMsU0FBUyxDQUFDLHVEQUF1RCxDQUFDLENBQUM7SUFDMUYsQ0FBQztDQUNKO0FBbEJELGtDQWtCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYXRJbnB1dENvbW1hbmQsIENvbW1hbmQgfSBmcm9tICdAc2FwcGhpcmUvZnJhbWV3b3JrJztcclxuaW1wb3J0IHsgaXNNZXNzYWdlSW5zdGFuY2UgfSBmcm9tICdAc2FwcGhpcmUvZGlzY29yZC5qcy11dGlsaXRpZXMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFBpbmdDb21tYW5kIGV4dGVuZHMgQ29tbWFuZCB7XHJcbiAgICBwdWJsaWMgb3ZlcnJpZGUgcmVnaXN0ZXJBcHBsaWNhdGlvbkNvbW1hbmRzKHJlZ2lzdHJ5OiBDaGF0SW5wdXRDb21tYW5kLlJlZ2lzdHJ5KSB7XHJcbiAgICAgICAgcmVnaXN0cnkucmVnaXN0ZXJDaGF0SW5wdXRDb21tYW5kKChidWlsZGVyKSA9PlxyXG4gICAgICAgICAgYnVpbGRlci5zZXROYW1lKCdwaW5nJykuc2V0RGVzY3JpcHRpb24oJ1BpbmcgYm90IHRvIHNlZSBpZiBpdCBpcyBhbGl2ZScpXHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG4gICAgXHJcbiAgICAgIHB1YmxpYyBhc3luYyBjaGF0SW5wdXRSdW4oaW50ZXJhY3Rpb246IENvbW1hbmQuQ2hhdElucHV0Q29tbWFuZEludGVyYWN0aW9uKSB7XHJcbiAgICAgICAgY29uc3QgbXNnID0gYXdhaXQgaW50ZXJhY3Rpb24ucmVwbHkoeyBjb250ZW50OiBgUGluZ2luZy4uLmAsIGVwaGVtZXJhbDogdHJ1ZSwgZmV0Y2hSZXBseTogdHJ1ZSB9KTtcclxuICAgIFxyXG4gICAgICAgIGlmIChpc01lc3NhZ2VJbnN0YW5jZShtc2cpKSB7XHJcbiAgICAgICAgICBjb25zdCBkaWZmID0gbXNnLmNyZWF0ZWRUaW1lc3RhbXAgLSBpbnRlcmFjdGlvbi5jcmVhdGVkVGltZXN0YW1wO1xyXG4gICAgICAgICAgY29uc3QgcGluZyA9IE1hdGgucm91bmQodGhpcy5jb250YWluZXIuY2xpZW50LndzLnBpbmcpO1xyXG4gICAgICAgICAgcmV0dXJuIGludGVyYWN0aW9uLmVkaXRSZXBseShgUG9uZyFcXG5CT1Q6ICR7cGluZ31tcy4gXFxuV1M6ICR7ZGlmZn1tcy5gKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICByZXR1cm4gaW50ZXJhY3Rpb24uZWRpdFJlcGx5KCdTb21ldGhpbmcgd2VudCB3cm9uZyB3aGVuIHRyeWluZyB0byByZWNpZXZlIHRoZSBwaW5nLicpO1xyXG4gICAgfVxyXG59Il19